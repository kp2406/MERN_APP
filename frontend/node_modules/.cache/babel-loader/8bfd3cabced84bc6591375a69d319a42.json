{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/priyaraghu/Documents/React_MERN/MERN/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { useDispatch } from \"react-redux\";\nexport default function CartScreen(props) {\n  _s();\n\n  //to fetch the productid and qty from link\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch(); //if productId exists then add that item to cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cart screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Add To Cart : ProductID: \", productId, \" Qty:\", qty]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartScreen, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/Users/priyaraghu/Documents/React_MERN/MERN/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","addToCart","useDispatch","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACxC;AACA,QAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAArC;AACA,QAAMC,GAAG,GAAGL,KAAK,CAACM,QAAN,CAAeC,MAAf,GACRC,MAAM,CAACR,KAAK,CAACM,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CADE,GAER,CAFJ;AAGA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CANwC,CAOxC;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAJ,EAAe;AACbS,MAAAA,QAAQ,CAACb,SAAS,CAACI,SAAD,EAAYI,GAAZ,CAAV,CAAR;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8CAC4BJ,SAD5B,WAC4CI,GAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArBuBN,U;UAMLD,W;;;KANKC,U","sourcesContent":["import React, { useEffect } from \"react\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function CartScreen(props) {\n  //to fetch the productid and qty from link\n  const productId = props.match.params.id;\n  const qty = props.location.search\n    ? Number(props.location.search.split(\"=\")[1])\n    : 1;\n  const dispatch = useDispatch();\n  //if productId exists then add that item to cart\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, []);\n  return (\n    <div>\n      <h1>cart screen</h1>\n      <p>\n        Add To Cart : ProductID: {productId} Qty:{qty}\n      </p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}