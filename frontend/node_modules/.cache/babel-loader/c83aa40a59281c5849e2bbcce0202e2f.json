{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      //adding item to cart\n      const item = action.payload; //to check whether tproduct with this id in the cart\n\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { //   state remains same and removing the cart items if the product is equal to action.payload assigned productId to payload in cartactions.js\n        ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/priyaraghu/Documents/React_MERN/MERN/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,0BAHF,QAIO,4BAJP;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE;AACA,YAAMQ,IAAI,GAAGF,MAAM,CAACG,OAApB,CAFF,CAGE;;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EAAE,GAAGR,KAAL;AAAYC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAAvB,SAAP;AACD;;AACH,SAAKP,gBAAL;AACE,aAAO,EACL;AACA,WAAGG,KAFE;AAGLC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;AAHN,OAAP;;AAKF,SAAKP,0BAAL;AAEA;AACE,aAAOE,KAAP;AAzBJ;AA2BD,CA5BM","sourcesContent":["import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      //adding item to cart\n      const item = action.payload;\n      //to check whether tproduct with this id in the cart\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return { ...state, cartItems: [...state.cartItems, item] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        //   state remains same and removing the cart items if the product is equal to action.payload assigned productId to payload in cartactions.js\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}