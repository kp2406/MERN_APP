{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productListReducer } from \"./reducers/productReducers\";\nimport { productDetailsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\"; //intital alue of cart object based on alue inside local storage\n\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/priyaraghu/Documents/React_MERN/MERN/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","productListReducer","productDetailsReducer","cartReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","reducer","productList","productDetails","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP;AAHA;AADa,CAArB;AAOA,MAAMG,OAAO,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,WAAW,EAAEX,kBADiB;AAE9BY,EAAAA,cAAc,EAAEX,qBAFc;AAG9BG,EAAAA,IAAI,EAAEF;AAHwB,CAAD,CAA/B;AAKA,MAAMW,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CnB,OAAvE;AACA,MAAMoB,KAAK,GAAGrB,WAAW,CACvBe,OADuB,EAEvBP,YAFuB,EAGvBU,eAAe,CAAChB,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAeiB,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { productListReducer } from \"./reducers/productReducers\";\nimport { productDetailsReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\n\n//intital alue of cart object based on alue inside local storage\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\")\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\n      : [],\n  },\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}